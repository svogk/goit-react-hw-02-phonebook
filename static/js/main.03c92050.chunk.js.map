{"version":3,"sources":["components/Filter/Filter.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Filter","filter","onChange","className","s","type","name","value","ContactForm","state","number","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","onAddContact","props","validateForm","id","uuidv4","reset","onCheckContact","trim","alert","form","onSubmit","this","htmlFor","input","placeholder","autoFocus","Component","ContactListItem","onDelete","item","button","onClick","protoTypes","PropTypes","string","isRequired","func","propTypes","contacts","arrayOf","shape","ContactList","length","map","contact","App","handleAddNewContact","nameContact","handleCheckContact","isExistContact","find","handleDeleteContact","handleFilter","getVisibleContact","toLowerCase","includes","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03c92050.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1xEyJ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div>\r\n      <p className={s.filter}>Find contacts by name</p>\r\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n    onCheckContact: PropTypes.func,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAddContact } = this.props;\r\n    const isValidateForm = this.validateForm();\r\n    if (!isValidateForm) {\r\n      this.reset();\r\n      return;\r\n    }\r\n    onAddContact({ id: uuidv4(), name, number });\r\n    this.reset();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckContact } = this.props;\r\n    if (!name.trim() || !number.trim()) {\r\n      alert('Для добавления контакта заполните поля Name и Number');\r\n      return false;\r\n    }\r\n    return onCheckContact(name);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"\">\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              placeholder=\"Введите имя контакта\"\r\n              onChange={this.handleChange}\r\n              autoFocus\r\n            />\r\n          </label>\r\n          <label htmlFor=\"\">\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              placeholder=\"Введите номер контакта\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button>Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      {name}: {number}\r\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.protoTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDelete={onDelete}\r\n          id={contact.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport Filter from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\n\nimport contacts from './data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: '',\n  };\n\n  handleAddNewContact = nameContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, nameContact],\n    }));\n\n  handleCheckContact = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    if (isExistContact) {\n      alert('Контакт с таким именем уже существует!');\n    }\n    return !isExistContact;\n  };\n\n  handleDeleteContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilter = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAddContact={this.handleAddNewContact}\n          onCheckContact={this.handleCheckContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDelete={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__HWpmw\",\"input\":\"ContactForm_input__3CDGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__Nm5NU\",\"button\":\"ContactListItem_button__2ocaT\"};"],"sourceRoot":""}